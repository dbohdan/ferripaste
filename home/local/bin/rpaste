#! /usr/bin/env tclsh

package require base32
package require cmdline

source $env(HOME)/.config/rpaste/config.tcl

proc main argv {
    global config

    lassign [cli $argv] src ext expire

    set filename [file tail $src]
    if {$ext ne {} && [regexp {\.} $filename]} {
        set ext .[file extension $filename]
    }
    set rootname [file rootname $filename]
    set id [base32-timestamp [clock seconds]]

    set dest ${rootname}.${id}${ext}
    set opts {}
    if {$expire ne {}} {
        lappend opts --header expire:$expire
    }
    exec curl \
        --fail \
        --form "file=@$src;filename=$dest" \
        --header "Authorization: $config(token)" \
        --silent \
        {*}$opts \
        $config(url) \
        >@ stdout \
        2>@ stderr \
}

proc cli argv {
    set options {
        {e.arg {} {File extension}}
        {x.arg {} {Expiration time}}
    }
    set usage ": [file tail [info script]] \[options\] src \noptions:"

    foreach arg $argv {
        if {$arg in {-? -h -help --help}} {
            usage $options $usage
            exit 0
        }
    }

    try {
        array set opts [::cmdline::getoptions argv $options $usage]
    } trap {CMDLINE USAGE} _ {
        usage $options $usage
        exit 1
    }

    if {[llength $argv] != 1} {
        usage $options $usage
        exit 1
    }

    list [lindex $argv 0] $opts(e) $opts(x)
}

proc usage {options usage} {
    puts stderr [::cmdline::usage $options $usage]
}

# Suffers from the Y2038 problem.
proc base32-timestamp t {
    string tolower [regsub =*$ [base32::encode [binary format Iu $t]] {}]
}

main $argv
